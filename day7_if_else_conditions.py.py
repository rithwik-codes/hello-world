# -*- coding: utf-8 -*-
"""Day 7

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14mK14PvbKpCqRa89dhWlOZC5M9l7-fK_
"""

# # Day 7 - Python Basics: If/Else Conditions

# 👋 Today, I learned how Python can **make decisions** using `if`, `else`, and `elif`.
# This is how programs become smart (e.g., checking age for voting, validating passwords, etc.).

# ## Goals of this Notebook
# - Understand `if`, `else`, and `elif` statements
# - Learn comparison operators (`==`, `<`, `>`, `!=`)
# - Practice simple decision-making programs

# 📌 Basic If Example
age = 18

if age >= 18:
    print("You are eligible to vote ✅")

# 📌 If/Else Example
age = int(input("Enter your age: "))

if age >= 18:
    print("You are eligible to vote ✅")
else:
    print("Sorry, you are not eligible to vote ❌")

# ## 🔄 Using `elif` (Else If)

# When there are multiple conditions,
# we use **elif** (else if) to check them one by one.

# 📌 Elif Example
marks = int(input("Enter your marks: "))

if marks >= 90:
    print("Grade: A 🏆")
elif marks >= 75:
    print("Grade: B 👍")
elif marks >= 50:
    print("Grade: C 🙂")
else:
    print("Grade: F ❌ - Better luck next time")

# ## 🏋️ Practice Program - Login System

# This program asks the user for a username and password
# and checks if they match the stored ones.

# 🏋️ Practice Program - Login System

# Stored credentials
correct_username = "admin"
correct_password = "1234"

# Taking input
username = input("Enter username: ")
password = input("Enter password: ")

if username == correct_username and password == correct_password:
    print("Login successful ✅ Welcome,", username)
else:
    print("Login failed ❌ Wrong username or password")

# ## ✅ Summary

# In this notebook, I learned:
# - How to use `if`, `else`, and `elif` for decisions
# - How to use comparison operators
# # - Wrote small programs for age check, grading system, and login system

# This is my **Day 7 progress** in the #100DaysOfCode challenge.
# Uploaded to GitHub as part of my learning portfolio.